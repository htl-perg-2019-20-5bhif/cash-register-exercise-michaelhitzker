<Window x:Class="CashRegister.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CashRegister"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ItemsControl ItemsSource="{Binding Path=Products}">
                <ItemsControl.ItemTemplate>
                    <!-- Note how we turn every item in the itemscontrol into a button by
                            using a data template. -->
                    <DataTemplate>
                        <!-- Note the use of a command binding here. Read more
                             at http://prismlibrary.github.io/docs/wpf/Implementing-MVVM.html#commands
                             The C# code in the view model will also make commands clearer -->
                        <!-- Note how we reference styles using `StaticResource` -->
                        <!-- Note the use of `RelativeSource` here. It is used to access properties of 
                             a parent control (in our case `ItemsControl`) -->
                    <Button Content="{Binding Path=ProductName}" Height="150" Width="150" Margin="10,10,10,10"
                            Command="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.AddToBasketCommand}"
                            CommandParameter="{Binding Path=Id}"
                            />
                </DataTemplate>
                </ItemsControl.ItemTemplate>
                <!-- Note how we switch the panel of the itemscontrol to a `WrapPanel`.
                     Therefore, buttons flow from left to right with line breaks. -->
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10,10,10,10">
            <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Path=ShoppingBasket}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Produkt" Binding="{Binding Path=ProductName}"/>
                    <DataGridTextColumn Header="Menge" Binding="{Binding Path=Amount}"/>
                    <DataGridTextColumn Header="Preis" Binding="{Binding Path=TotalPrice}"/>
                </DataGrid.Columns>
            </DataGrid>
            <Label Content="Gesamtsumme: " HorizontalAlignment="Right" Margin="0,0,0,0" FontWeight="Bold"/>
            <Label Content="{Binding Path=TotalPrice}" HorizontalAlignment="Right" Margin="0,0,0,0" FontWeight="Black" FontSize="30"/>
            <Button Content="checkout" FontSize="30"/>
            </StackPanel>
        </Grid>
</Window>
